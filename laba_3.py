# -*- coding: utf-8 -*-
"""laba_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14EzldP-Kp4te2EnV1Np9SQwJnBhreRrK
"""

# Подключение Pandas и NumPy
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from bokeh.plotting import figure, output_file, show
from bokeh.io import output_notebook

#3. web-scraping
url = "https://conomy.ru/education/articles/147"
id_table = 0
df_power = pd.read_html(url, header = 0, index_col = 0)[id_table]
df_power

# 4.2. Добавление к таблице столбца с новыми данными
df_power['Итого мощность, МВт'] = df_power['«Интер РАО»']+df_power['«РусГидро»']+df_power['«Юнипро»']+df_power['«Мосэнерго»']+df_power['ОГК-2']+df_power['ТГК-1']+df_power['«Энел Россия»']
df_power
df_power['Выработка за сутки'] = df_power['Итого мощность, МВт'] * 24 #выработка энергии всей отрасли за сутки
df_power

#4.1. Сортировка данных
df_power = df_power.sort_values(['Выработка за сутки'], ascending = False)
df_power

#4.3. Выбор фрагмента таблицы по условию
# Выбрать электростанции с итоговой мощностью ниже 1000 МВт
print(df_power[df_power['Итого мощность, МВт'] < 1000.])
print()

#4.4. Выбор фрагмента таблицы по номерам строк и столбцов
df_power_2 = df_power.copy()
print('данные из первой строки и второго столбца')
print(df_power_2.iloc[1 , 2])
print()
print('данные из всех строк кроме двух последних и из столбцов со второго по четвертый включительно')
print(df_power_2.iloc[: -2, 2 : 5])
print()
print('данные из нечетных строк и третьего столбца')
print(df_power_2.iloc[ : : 2, 3])
print()

#4.5. Расчеты статистических показателей по сгруппированным данным

# Максимальная выработка за сутки по итоговой мощности.
print(df_power.groupby(['Итого мощность, МВт'])['Выработка за сутки'].max())
print()

# Число видов генерации энергии в компании «РусГидро» по выработке мощности за сутки выше 2000 МВт
print(df_power.groupby(['«РусГидро»', df_power['Выработка за сутки'] > 2000])['Выработка за сутки'].count())
print()

#4.6. Построение гистограммы по данным
df_power['«Интер РАО»'].plot(kind = 'bar')
df_power['«РусГидро»'].plot(kind = 'bar')
df_power['«Юнипро»'].plot(kind = 'bar')
df_power['«Мосэнерго»'].plot(kind = 'bar')
df_power['ОГК-2'].plot(kind = 'bar')
df_power['ТГК-1'].plot(kind = 'bar')
df_power['«Энел Россия»'].plot(kind = 'bar')
print()

#4.7. Построение круговой диаграммы по данным
input_matrix = df_power.values
generation_sum = (input_matrix[: , :7 ]).sum(axis = 0)

labels = df_power.columns[ : 7]

fig1, ax1 = plt.subplots(figsize = (10, 10))
ax1.pie(generation_sum, labels = labels, autopct = '%1.0f%%')
ax1.axis('equal')

plt.show()